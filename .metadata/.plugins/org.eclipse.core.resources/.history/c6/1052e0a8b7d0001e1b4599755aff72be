package conta;

import java.util.Scanner;

import conta.model.Conta;
import conta.model.ContaCorrente;
import conta.model.ContaPoupanca;

public class Menu {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//Importação da classe "Conta" para fazer uso de seus atributos
		//Conta novaConta = new Conta(null, 0, 0, 0, 0); //Aqui, declaramos os atributos com valores vazios para que o usuário os registre
		Conta novaConta = new Conta(null, 0, 0, 0, 0) {
			
		};
		//É imaginado que o usuário seja algum REPRESENTANTE do banco
		//Import de outras classes
		ContaCorrente contaCorrente = new ContaCorrente(null, 0, 0, 0, 0, 0);

		//Variáveis
		String nomeTitular = null;
		int tipoConta = 0;
		int numeroConta = 0;
		float saldo = 0f;
		float valorSaque = 0f;
		float valorDeposito = 0f;

		//Scanner
		Scanner leia = new Scanner(System.in);

		
		//Declarando os valores das variáveis
		System.out.println("*************************************************");
		System.out.println("** Informações Cliente **");
		System.out.print("Digite o nome do titular: ");
		nomeTitular = leia.next();
		novaConta.setNomeTitular(nomeTitular); //Aqui, declaramos que o nomeTitular de Conta, é igual ao valor lido pelo scanner

		//Agência será uma váriavel já declarada pelo sistema!
		novaConta.setAgenciaConta(2527);

		System.out.println("\n** 1 para corrente, 2 para poupança **");
		System.out.print("Informe o tipo da conta: ");
		tipoConta = leia.nextInt();
		novaConta.setTipoConta(tipoConta);

		System.out.print("\nDigite o número da conta: ");
		numeroConta = leia.nextInt();
		novaConta.setNumeroConta(numeroConta);

		System.out.print("\nDigite o saldo atual da conta: ");
		saldo = leia.nextFloat();
		novaConta.setSaldo(saldo);
		contaCorrente.setSaldo(saldo);

		float limiteSaque = saldo * 0.90f; //Aqui, estamos declarando que o limite será igual a 90% do saldo, 
		//assim o usuário não poderá sacar mais do que tem na conta e também não poderá deixar sua conta vazia
		contaCorrente.setLimite(limiteSaque);

		
		//Imprimindo os resultados de acordo com a classe do model
		novaConta.visualizar();
		
		if(tipoConta == 1) { //No caso da conta for corrente, efetua o método dentro da classe contaCorrente
			//Método de saque de dinheiro
			System.out.println("\n*************************************************");
			System.out.println("** Saque de Dinheiro **");
			System.out.println("\nEsteja ciente que seu limite é de: " + contaCorrente.getLimite());
			System.out.print("Informe a quantidade que deseja sacar: ");
			valorSaque = leia.nextFloat(); //Declarando o valor de saque

			//Efetuando o método de saque
			if(valorSaque < limiteSaque) {
				System.out.println("\nO saldo inicial de " + nomeTitular + " é igual a " + contaCorrente.getSaldo());
				contaCorrente.sacar(valorSaque);
				System.out.println("\nO saldo pós saque de " + nomeTitular + " é igual a " + contaCorrente.getSaldo());
				System.out.println("\n*************************************************");
				
				System.exit(0); //Finaliza o sistema após realizar o método da conta corrente
			} else {
				System.out.println("\nO saldo não pode ser efetuado!");
				System.exit(0); //Finaliza o sistema após realizar o método da conta corrente
			}
			
			
			System.exit(0); //Finaliza o sistema após realizar o método da conta corrente
			
		} else if(tipoConta == 2) { //No caso da conta for poupança, efetua o método dentro da classe contaPoupança
			//Método de depósito de dinheiro
			System.out.println("\n*************************************************");
			System.out.println("** Depósito de Dinheiro **");
			System.out.print("\nInforme a quantidade que deseja depositar: ");
			valorDeposito = leia.nextFloat(); //Declarando o valor de depósito

			novaConta.depositar(valorDeposito);
			System.out.println("\nO novo saldo é de: " + novaConta.getSaldo());
			System.out.println("\n*************************************************");
			
			System.exit(0); //Finaliza o sistema após realizar o método da conta poupança
			
		} else {
			System.out.println("\nTipo de conta inválida!");
			System.exit(0); //Fecha o sistema caso o tipo de conta seja inválido
		}
		

	}

}
